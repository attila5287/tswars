{"version":3,"sources":["components/Char.tsx","components/Loading.tsx","App.tsx","reportWebVitals.ts","index.tsx","utils/helpers.js"],"names":["Char","props","char","className","animationIn","animationOut","isVisible","animationInDelay","name","height","mass","hair_color","skin_color","eye_color","birth_year","gender","helpers","formatDate","edited","href","homeworld","url","species","map","s","vehicles","v","split","starships","films","f","created","Loading","loading","children","App","useState","chars","setChars","setLoading","getChars","term","a","axios","get","data","results","console","log","useEffect","onChange","event","q","target","value","trim","handleInputChange","selected","i","animationInDuration","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports","formatAmount","sign","amount","parseInt","toLocaleString","date","Date","getMonth","getDate","getFullYear"],"mappings":"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","file":"static/js/main.6dde3bd8.chunk.js","sourcesContent":["import {FunctionComponent} from \"react\";\r\nimport {CharType, FilmType} from \"../types\";\r\nimport helpers from \"../utils/helpers\";\r\nimport {Animated} from 'react-animated-css';\r\n\r\ninterface ICharProps {\r\n  char : CharType;\r\n}\r\n\r\nconst Char : FunctionComponent < ICharProps > = (props) => {\r\n  const {char} = props;\r\n\r\n  return (\r\n    <div className='container'>\r\n      <h1\r\n        className='rounded-lg bg-dark text-warning d-flex flex-row justify-content-around'>\r\n        <Animated\r\n          animationIn='rotateInUpLeft'\r\n          animationOut='bounceInLeft'\r\n          isVisible={true}\r\n          animationInDelay={1000}>\r\n          <i className='text-2xl fab fa-rebel'></i>\r\n        </Animated>\r\n        <Animated\r\n          animationIn='zoomIn'\r\n          animationOut='bounceInLeft'\r\n          isVisible={true}\r\n          animationInDelay={1250}>\r\n          <i className='text-capitalize'>\r\n            {char.name}\r\n          </i>\r\n        </Animated>\r\n        <Animated\r\n          animationIn='rotateInUpRight'\r\n          animationOut='bounceInRight'\r\n          isVisible={true}\r\n          animationInDelay={1500}>\r\n          <i className='text-2xl fab fa-empire'></i>\r\n        </Animated>\r\n      </h1>\r\n      <div className=\"text-warning d-flex flex-row justify-content-around\">\r\n          <Animated\r\n          animationIn='flipInY'\r\n          animationOut='bounceInLeft'\r\n          isVisible={true}\r\n                  animationInDelay={ 750 } \r\n                  className='w-100'>\r\n            <ul className='h-100 w-100 list-group text-center text-uppercase'>\r\n                <li className='list-group-item'>\r\n                    height : {char.height}</li>\r\n                <li className='list-group-item'>\r\n                    mass : {char.mass}</li>\r\n                <li className='list-group-item'>\r\n                    hair_color : {char.hair_color}</li>\r\n                <li className='list-group-item'>\r\n                    skin_color : {char.skin_color}</li>\r\n                <li className='list-group-item'>\r\n                    eye_color : {char.eye_color}</li>\r\n                <li className='list-group-item'>\r\n                    birth_year : {char.birth_year}</li>\r\n                <li className='list-group-item'>\r\n                    gender : {char.gender}</li>\r\n            </ul>\r\n              </Animated>\r\n              <Animated\r\n                    animationIn='flipInY'\r\n          animationOut='bounceInLeft'\r\n          isVisible={true}\r\n                  animationInDelay={ 1500 }\r\n                  className='w-100'\r\n              >\r\n        <ul className='h-100 w-100 list-group text-center text-uppercase'>\r\n\r\n          <li className='list-group-item'>\r\n            edited : {helpers.formatDate(char.edited)}</li>\r\n          <li className='list-group-item'>\r\n            homeworld :\r\n            <a href={char.homeworld} className='text-info'>\r\n              <i className=\"fas fa-external-link-alt\"></i>\r\n            </a>\r\n          </li>\r\n          <li className='list-group-item'>\r\n            url :\r\n            <a href={char.url} className='text-info'>\r\n              <i className=\"fas fa-external-link-alt\"></i>\r\n\r\n            </a>\r\n          </li>\r\n          <li className='list-group-item'>\r\n            species : {char\r\n              .species\r\n              .map(s => (\r\n                <p key={s}>\r\n                  <a href={s}>{s}</a>\r\n                </p>\r\n              ))}</li>\r\n          <li className='list-group-item'>\r\n            vehicles : {char\r\n              .vehicles\r\n              .map(v => (\r\n                <i key={v}>\r\n                  <a href={v} className='text-info'>\r\n                    <i className='fas fa-space-shuttle mx-2'></i>\r\n                    {v.split('/')[5]}</a>\r\n                </i>\r\n              ))}</li>\r\n          <li className='list-group-item'>\r\n            starships : {char\r\n              .starships\r\n              .map(s => (\r\n                <i key={s}>\r\n                  <a href={s} className='text-info'>\r\n                    <i className=\"fas fa-rocket mx-2\"></i>\r\n                    {s.split('/')[5]}</a>\r\n                </i>\r\n              ))}</li>\r\n          <li className='list-group-item'>\r\n            films : {char\r\n              .films\r\n              .map(f => (\r\n                <i key={f}>\r\n                  <a href={f} className='text-info'>\r\n                    <i className=\"fas fa-film mx-2\"></i>\r\n                    {f.split('/')[5]}</a>\r\n                </i>\r\n              ))}</li>\r\n        </ul>\r\n              </Animated>\r\n      </div>\r\n      <p className='text-center text-warning'>\r\n        <i className=\"fas fa-info-circle mx-2\"></i>\r\n        <i>\r\n          created : {helpers.formatDate(char.created)}\r\n        </i>\r\n      </p>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Char;\r\n","import { FunctionComponent } from \"react\";\r\n\r\ninterface ILoadingProps {\r\n  loading: boolean;\r\n}\r\n\r\nconst Loading: FunctionComponent<ILoadingProps> = (props) => {\r\n  const { loading } = props;\r\n\r\n  if (loading) {\r\n    return <>Loading...</>;\r\n  }\r\n\r\n  return <>{props.children}</>;\r\n};\r\n\r\nexport default Loading;\r\n","import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Char from \"./components/Char\";\nimport { Results, CharType } from \"./types\";\nimport Loading from \"./components/Loading\";\nimport {Animated} from 'react-animated-css';\nimport \"./index.css\";\n\nfunction App() {\n  const [options, setOptions] = useState([]);\n  const [chars, setChars] = useState<CharType[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const getChars = async (term) => {\n  setLoading(true);\n  try {\n      const { data } = await axios.get<Results>(\n    \"https://swapi.dev/api/people/?search=\" + term\n      );\n      setChars(data.results);\n  } catch {\n      console.log(\"err char fetch swapi\");\n  } finally {\n      setLoading(false);\n  }\n  };\n  // Loads all books and sets them to books\n  function handleInputChange (event) {\n  const q = event\n      .target\n      .value\n      .trim()\n      console.log(`>> q`, q)\n      getChars(q)\n\n  };\n  useEffect(() => {\n  getChars('anakin');\n  }, []);\n\n  return (\n<>              <nav className=\"navbar navbar-expand navbar-dark bg-primary\">\n        <div className=\"btn btn-outline-info disabled my-2 my-sm-0 btn-lg text-nowrap\">\n              <i className='fab fa-rebel mx-2'></i>\n              <i className='fab fa-empire mx-2'></i>\n        </div>                  \n              <select className='form-select' onChange={ (event) => handleInputChange(event) }>\n                  <option value=\"anakin\" key=\"1\" selected>anakin</option>\n                  <option value=\"luke\" key=\"2\">luke</option>\n          </select>\n                  \n              </nav>\n  <div className='container pt-2'>\n          <Loading loading={ loading }>\n\n    {chars.map((char,i) => {\n        return (\n          <Animated\n            animationIn='fadeIn'\n            animationOut='bounceInLeft'\n            isVisible={true}\n            animationInDelay={ 500 }\n            animationInDuration={ 2500 }\n            key={ i }\n          >\n          <Char key={ char.name } char={ char } />\n          </Animated>\n      );\n    }) }\n      </Loading>\n  </div></>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootswatch/dist/slate/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = {\r\n    formatAmount: (sign, amount) => {\r\n\t\t// format large numbers with commas\r\n\t\tif (sign == 'minus') {\r\n\t\t\treturn '$ (' + parseInt(amount).toLocaleString() + ')';\r\n\t\t} else {\r\n\t\t\treturn '$ '+parseInt(amount).toLocaleString();\r\n\t\t}\r\n\t},\r\n\tformatDate: (date) => {\r\n\t\t// Using JavaScript Date methods, we get and format the month, date, and year\r\n\t\t// We need to add one to the month since it is returned as a zero-based value\r\n\t\treturn `${new Date(date).getMonth() + 1}/${new Date(date).getDate()}/${\r\n\t\t\t// We add five years to the 'year' value to calculate the end date\r\n\t\t\tnew Date(date).getFullYear() + 5\r\n\t\t}`;\r\n\t}, \r\n \r\n\r\n};\r\n"],"sourceRoot":""}